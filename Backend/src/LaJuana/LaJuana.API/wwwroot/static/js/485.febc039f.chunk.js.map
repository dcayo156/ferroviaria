{"version":3,"file":"static/js/485.febc039f.chunk.js","mappings":"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","sources":["components/Security/Register.tsx","store/services/Auth/index.tsx","../node_modules/@mui/icons-material/AccountCircle.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport {NavLink, useNavigate} from 'react-router-dom'\r\nimport { styled } from '@mui/material/styles';\r\nimport type { IRegisterRequest,IRegisterResponse } from '../../store/types/Auth';\r\nimport { useRegisterMutation } from '../../store/services/Auth'\r\nimport { toast } from 'react-toastify';\r\nimport \"./NavLink.css\";\r\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/dist/query\";\r\nimport { SerializedError } from \"@reduxjs/toolkit\";\r\nconst AppBarDisplay = styled('div')(({ theme }) => ({\r\n    [theme.breakpoints.down('md')]: { //cuando es chico\r\n        display: 'none',\r\n    },\r\n}));\r\nexport default function Register() {\r\n    const navigate =  useNavigate();\r\n    const [personRegister, setPersonRegister] = useState<IRegisterRequest>({\r\n        nombre: '',\r\n        apellidos: '',\r\n        email: '',\r\n        username:'',\r\n        password: '',\r\n        confirmpassword: ''\r\n    });\r\n    const [registerUser] = useRegisterMutation();\r\n    const [errorPassword,setErrorPassword] = useState<boolean>(false);\r\n    const [errorConfirmPassword,setErrorConfirmPassword] = useState<boolean>(false);\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        registerUser(personRegister).then((response: { data: IRegisterResponse; } | { error: FetchBaseQueryError | SerializedError; })=>{\r\n            if(\"data\" in response){\r\n                toast.success(\"Registro exitoso\");\r\n                navigate(\"/authentication/login\");\r\n            }\r\n            if(\"error\" in response){\r\n                if(\"message\" in response.error)\r\n                    toast.success(response.error.message);\r\n                if(\"error\" in response.error)\r\n                    toast.success(response.error.error);\r\n            }\r\n        });\r\n    };\r\n    const handleChanges = (e:any) => {\r\n        const { name, value } = e.target;\r\n        setPersonRegister({\r\n            ...personRegister,\r\n            [name]: value\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        personRegister.password===personRegister.confirmpassword?\r\n        setErrorConfirmPassword(false):setErrorConfirmPassword(true);\r\n    },[personRegister.confirmpassword])\r\n    \r\n    const validatePassword = () =>{\r\n        let regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&#()._-])[A-Za-z\\d$@$!%*?&#()._-]{8,15}$/;\r\n        if(!personRegister.password.match(regex)){\r\n            setErrorPassword(true);\r\n        }\r\n        else{\r\n            setErrorPassword(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container sx={{\r\n        }}\r\n            component=\"main\" maxWidth=\"xs\" >\r\n            <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    marginTop: 8,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <AppBarDisplay>\r\n                    <Avatar sx={{ m: 1, bgcolor: \"action\", width: 56, height: 56 }}>\r\n                        <AccountCircleIcon sx={{ fontSize: 50 }} />\r\n                    </Avatar>\r\n                </AppBarDisplay>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Registro de Usuario\r\n                </Typography>\r\n                <Box\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit}\r\n                    noValidate\r\n                    sx={{ mt: 1 }}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs >\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"nombre\"\r\n                                label=\"Nombre\"\r\n                                name=\"nombre\"\r\n                                autoFocus\r\n                                onChange={handleChanges}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"apellidos\"\r\n                                label=\"Apellido/s\"\r\n                                name=\"apellidos\"                                \r\n                                onChange={handleChanges}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        onChange={handleChanges}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleChanges}\r\n                    />\r\n                    <TextField\r\n                        error={errorPassword}\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"ContraseÃ±a\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onBlur={validatePassword}\r\n                        onChange={handleChanges}\r\n                        autoComplete=\"current-password\"\r\n                        helperText={errorPassword?`Minimo 8 caracteres,\r\n                        Maximo 15,\r\n                        Al menos una letra mayÃºscula,\r\n                        Al menos una letra minÃºscula,\r\n                        Al menos un dÃ­gito,\r\n                        No espacios en blanco,\r\n                        Al menos 1 caracter especial`:\"\"}\r\n                    />\r\n                    <TextField\r\n                        error={errorConfirmPassword}\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"confirmpassword\"\r\n                        label=\"Repetir ContraseÃ±a\"\r\n                        type=\"password\"\r\n                        id=\"confirmpassword\"\r\n                        onChange={handleChanges}\r\n                        autoComplete=\"current-password\"\r\n                        helperText={errorConfirmPassword?\"El password no coincide\":\"\"}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{ mt: 3, mb: 2 }}\r\n                    >\r\n                        Registrar\r\n                    </Button>\r\n                    <Grid container >\r\n                        <Grid item  >\r\n                          \r\n                            <NavLink to=\"/authentication/login\" className=\"NavLink-react-router\" > \r\n                            Â¿Ya tienes cuenta ?    Logueate\r\n                            </NavLink> \r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n\r\n    );\r\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { URL_API_V1 } from '..'\r\nimport { RootState } from '../..'\r\nimport type { LoginRequest, LoginResponse, IRegisterRequest, IRegisterResponse } from '../../types/Auth'\r\n\r\n\r\nexport const api = createApi({\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: URL_API_V1,\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = (getState() as RootState).auth.token\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n      return headers\r\n    },\r\n  }),\r\n  endpoints: (builder) => ({\r\n    login: builder.mutation<LoginResponse, LoginRequest>({\r\n      query: (credentials) => ({\r\n        url: 'Account/Login',\r\n        method: 'POST',\r\n        body: credentials,\r\n      }),\r\n    }),\r\n    register: builder.mutation<IRegisterResponse,IRegisterRequest>({\r\n        query:(user) => ({\r\n            url:'Account/Register',\r\n            method:'POST',\r\n            body:user\r\n        })\r\n    })\r\n  }),\r\n})\r\n\r\nexport const { useLoginMutation, useRegisterMutation } = api\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n}), 'AccountCircle');\n\nexports.default = _default;"],"names":["AppBarDisplay","styled","theme","breakpoints","down","display","Register","navigate","useNavigate","useState","nombre","apellidos","email","username","password","confirmpassword","personRegister","setPersonRegister","useRegisterMutation","registerUser","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","handleChanges","e","target","name","value","useEffect","sx","component","maxWidth","marginTop","flexDirection","alignItems","m","bgcolor","width","height","fontSize","variant","onSubmit","event","preventDefault","then","response","toast","error","message","noValidate","mt","container","item","xs","margin","required","fullWidth","id","label","autoFocus","onChange","autoComplete","type","onBlur","match","helperText","mb","to","className","api","createApi","baseQuery","fetchBaseQuery","baseUrl","URL_API_V1","prepareHeaders","headers","token","getState","auth","set","endpoints","builder","login","mutation","query","credentials","url","method","body","register","user","useLoginMutation","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}