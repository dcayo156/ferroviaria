{"version":3,"file":"static/js/106.674be9d2.chunk.js","mappings":"gLAcMA,EAAM,CACR,MAAO,SAAC,IAAD,CAAcC,GAAI,CAAEC,MAAO,GAAIC,OAAQ,MAC9C,MAAO,SAAC,IAAD,CAAYF,GAAI,CAAEC,MAAO,GAAIC,OAAQ,OAsBhD,IAnByD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC/DC,GAAWC,EAAAA,EAAAA,MAIjB,OACI,SAAC,IAAD,CAASJ,MAAOA,GAAS,YAAaK,UAAU,OAAhD,UACI,SAAC,IAAD,CACIC,KAAK,QACLC,KAAK,MACLC,QAAS,WAPjBL,EAOgCF,IACxBJ,GAAI,CAAEY,GAAI,EAAGC,QAAS,gBAJ1B,SAMEd,EAAMM,S,qGC3BdS,EAAW,CACb,0BAA2B,CAAEC,GAAI,IAmCrC,IAzBoD,SAAC,GAI9C,IAHHC,EAGE,EAHFA,SACAC,EAEE,EAFFA,UACAd,EACE,EADFA,MAEMe,GAAQC,EAAAA,EAAAA,KACd,OAAS,UAAC,IAAD,CACLnB,GAAI,CACAoB,YAAeF,EAAMG,QAAQC,QAA8B,KAC3D,SAAU,CACNC,UAAW,oCAJd,UAQJpB,IACG,SAAC,IAAD,CAAYH,GAAIc,EAAUX,OAAO,SAAC,IAAD,CAAYqB,QAAQ,KAApB,SAA0BrB,IAAqBsB,OAAQR,IAE3Fd,IAAS,SAAC,IAAD,KACN,SAAC,IAAD,UACKa,S,+MClCJU,EAAe,SAACC,GACzB,IAAIC,EAAa,IAAIC,KAEjBC,EAAMF,EAAMG,cAAgBJ,EAASI,cACrCC,EAAIJ,EAAMK,WAAaN,EAASM,WAIpC,OAHID,EAAI,GAAY,IAANA,GAAWJ,EAAMM,UAAYP,EAASO,YAChDJ,IAEGA,GASEK,EAA+B,CACxC,CAAEC,GAAI,YAAaC,MAAO,aAAcC,SAAU,KAClD,CAAEF,GAAI,aAAcC,MAAO,cAAeC,SAAU,KACpD,CAAEF,GAAI,WAAYC,MAAO,YAAaC,SAAU,KAChD,CAAEF,GAAI,YAAaC,MAAO,MAAOC,SAAU,KAC3C,CAAEF,GAAI,SAAUC,MAAO,SAAUC,SAAU,KAC3C,CACEF,GAAI,SACJC,MAAO,SACPC,SAAU,IACVC,MAAO,U,iDCoDb,EAjEqE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9DlC,GAASC,EAAAA,EAAAA,MACf,GAGIkC,EAAAA,EAAAA,MAHJ,eACIC,EADJ,UAEMC,UAgBN,OAAQ,UAACC,EAAA,EAAD,YACJ,SAACC,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,SAIKE,EAAOO,aAEZ,SAACF,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,SAIKE,EAAOQ,cAEZ,SAACH,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,SAIKE,EAAOS,YAEZ,SAACJ,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,SAIKZ,EAAa,IAAIG,KAAKW,EAAOU,eAElC,SAACL,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,SAIKE,EAAOW,UAEZ,UAACN,EAAA,EAAD,CACIN,MAAM,SACNO,MAAO,CAAER,SAAU,KAFvB,WAII,SAACc,EAAA,EAAD,CAAYzC,QAAS,WAtCH,IAACyB,EAAAA,EAsCyBI,EAAOJ,GArCvD9B,EAAS,WAAD,OAAY8B,EAAZ,WAqCqD,aAAW,SAApE,UACI,SAACiB,EAAA,EAAD,OAEJ,SAACD,EAAA,EAAD,CAAYzC,QAAS,WApDD,IAACyB,EAAAA,EAoDyBI,EAAOJ,GAnDhDkB,OAAOC,QAAQ,qCAChBb,EAAaN,GAAIoB,MAAK,SAACC,GACxB,SAAUA,GACTC,EAAAA,GAAAA,QAAA,mCAED,UAAWD,GACVC,EAAAA,GAAAA,MAAY,+CA6C2C,aAAW,SAAtE,UACI,SAACC,EAAA,EAAD,WAvCWnB,EAAOJ,KCiClC,EAnDkD,SAAC,GAAY,IAAXwB,EAAU,EAAVA,KAClD,EAAwBC,EAAAA,SAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,EAAAA,SAAe,GAArD,eAAOG,EAAP,KAAoBC,EAApB,KAWA,OACE,UAACC,EAAA,EAAD,CAAOlE,GAAI,CAAEC,MAAO,OAAQkE,SAAU,UAAtC,WACE,SAACC,EAAA,EAAD,CAAgBpE,GAAI,CAAEqE,UAAW,KAAjC,UACE,UAACC,EAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,WACE,SAACC,EAAA,EAAD,WACE,SAAC5B,EAAA,EAAD,UACKT,EAAUsC,KAAI,SAACC,GAAD,OACf,SAAC7B,EAAA,EAAD,CAEEN,MAAOmC,EAAOnC,MACdO,MAAO,CAAER,SAAUoC,EAAOpC,UAH5B,SAKGoC,EAAOrC,OAJHqC,EAAOtC,YASpB,SAACuC,EAAA,EAAD,UACIf,GACEA,EAAKgB,MAAMd,EAAOE,EAAaF,EAAOE,EAAcA,GAAaS,KAAI,SAACjC,GAClE,OAAO,SAAC,EAAD,CAAgCA,OAAQA,GAAnBA,EAAOJ,eAMjD,SAACyC,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAE,GAAI,GAAI,KAC/BC,UAAU,MACVC,MAAOpB,EAAKqB,OACZjB,YAAaA,EACbF,KAAMA,EACNoB,aAzCmB,SAACC,EAAgBC,GACxCrB,EAAQqB,IAyCJC,oBAtC0B,SAACF,GAC/BlB,GAAgBkB,EAAMG,OAAOC,OAC7BxB,EAAQ,UCRZ,EAT6D,WACzD,OAA2CyB,EAAAA,EAAAA,MAA7BC,EAAd,EAAQC,KAAR,EAAsBC,MAAtB,EAA6BhD,UAC7B,OACI,SAACiD,EAAA,EAAD,CAAUzF,MAAM,WAAWc,WAAW,SAAC4E,EAAA,EAAD,CAAYxF,KAAK,OAAOF,MAAM,iBAAiBC,KAAK,mBAA1F,UACI,SAAC,EAAD,CAAOwD,UAAckC,GAARL,EAAkBA,EAAoB","sources":["components/cards/CardButton.tsx","components/cards/MainCard.tsx","views/Person/Table/Columns.tsx","views/Person/Table/CustomTableRow.tsx","views/Person/Table/index.tsx","views/Person/index.tsx"],"sourcesContent":["\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, IconButton, Link, Tooltip } from '@mui/material';\r\nimport PlusOneIcon from '@mui/icons-material/AddOutlined';\r\nimport ArrowBack from '@mui/icons-material/ArrowBack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// project imports\r\n\r\n\r\ninterface ICardButton {\r\n    title:string\r\n    link: string\r\n    type: \"plus\" | \"back\"\r\n}\r\nconst types={\r\n    \"plus\":<PlusOneIcon  sx={{ width: 32, height: 32 }}/>,\r\n    \"back\":<ArrowBack  sx={{ width: 32, height: 32 }}/>,\r\n}\r\n\r\nconst CardButton: React.FunctionComponent<ICardButton> = ({ title, link, type}) => {\r\n    const navigate = useNavigate();\r\n    const redirectTo= (to:string)=>{\r\n        navigate(to);\r\n    }\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <IconButton\r\n                size=\"small\"\r\n                edge=\"end\"\r\n                onClick={()=>redirectTo(link)}\r\n                sx={{ ml: 2, bgcolor: 'primary.main' }}\r\n            >\r\n             {types[type]}   \r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default CardButton;\r\n","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography,Color } from '@mui/material';\r\n\r\n\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n\r\ninterface IContent{\r\n    children : any\r\n    secondary: any\r\n    title: any\r\n}\r\n \r\nconst MainCard: React.FunctionComponent<IContent> = ({\r\n    children,\r\n    secondary,\r\n    title,\r\n}) => {\r\n    const theme = useTheme();\r\n    return ( <Card   \r\n        sx={{\r\n            borderColor: ((theme.palette.primary as unknown) as Color)[500],\r\n            ':hover': {\r\n                boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n            },\r\n        }}\r\n    >\r\n        {title && (\r\n            <CardHeader sx={headerSX} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\r\n        )}\r\n        {title && <Divider />}\r\n            <CardContent >\r\n                {children}\r\n            </CardContent>\r\n        \r\n    </Card> );\r\n}\r\n \r\nexport default MainCard;\r\n","\r\nexport const CalculateAge = (birthday: Date) => {\r\n    var today:Date = new Date();\r\n    //var birthday = date;\r\n    var age = today.getFullYear() - birthday.getFullYear();\r\n    var m = today.getMonth() - birthday.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthday.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\ninterface Column {\r\n    id: string;\r\n    label: string;\r\n    minWidth?: number;\r\n    align?: 'right';\r\n    format?: (value: number) => string;\r\n  }\r\nexport const columnsTD: readonly Column[] = [\r\n    { id: 'firstName', label: 'First Name', minWidth: 170 },\r\n    { id: 'secondName', label: 'Second Name', minWidth: 170 },\r\n    { id: 'lastName', label: 'Last Name', minWidth: 170 },\r\n    { id: 'birthDate', label: 'Age', minWidth: 170 },\r\n    { id: 'gender', label: 'Gender', minWidth: 170 },\r\n    {\r\n      id: 'action',\r\n      label: 'Action',\r\n      minWidth: 170,\r\n      align: 'right',\r\n    },\r\n  ];\r\n","import { TableCell, TableRow, IconButton } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { IPerson } from '../../../store/types/Person'\r\nimport { CalculateAge } from './Columns'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { useDeletePeopleMutation } from '../../../store/services/Person'\r\nimport { toast } from 'react-toastify';\r\nimport { FetchBaseQueryError } from '@reduxjs/toolkit/dist/query';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport { useNavigate } from 'react-router-dom';\r\ninterface CustomTableRowProps {\r\n    person: IPerson\r\n}\r\n\r\nconst CustomTableRow: React.FunctionComponent<CustomTableRowProps> = ({ person }) => {\r\n    const navigate=useNavigate();\r\n    const [\r\n        deletePerson,\r\n        { isLoading: isUpdating },\r\n    ] = useDeletePeopleMutation()\r\n    const onClickDeletePerson = (id:string) => {\r\n        var bool=window.confirm(\"Seguro de eliminar esta Persona?\")\r\n        bool && deletePerson(id).then((response: { data: string; } | { error: FetchBaseQueryError | SerializedError; })=>{\r\n            if(\"data\" in response){\r\n                toast.success(`Persona eliminada correctamente`);\r\n            }\r\n            if(\"error\" in response){\r\n                toast.error(\"Error al momento de Eliminar la persona\");\r\n            }\r\n        });\r\n    }\r\n    const onClickEditPerson = (id:string) => {\r\n        navigate(`/person/${id}/edit`)\r\n    }\r\n    return (<TableRow key={person.id}>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            {person.firstName}\r\n        </TableCell>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            {person.secondName}\r\n        </TableCell>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            {person.lastName}\r\n        </TableCell>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            {CalculateAge(new Date(person.birthDate))}\r\n        </TableCell>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            {person.gender}\r\n        </TableCell>\r\n        <TableCell\r\n            align=\"center\"\r\n            style={{ minWidth: 170 }}\r\n        >\r\n            <IconButton onClick={()=>{onClickEditPerson(person.id)}} aria-label=\"delete\">\r\n                <EditIcon />\r\n            </IconButton>\r\n            <IconButton onClick={()=>{onClickDeletePerson(person.id)}} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </TableCell>\r\n    </TableRow>);\r\n}\r\n\r\nexport default CustomTableRow;","import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport CustomTableRow from './CustomTableRow';\r\n\r\nimport {columnsTD} from './Columns';\r\nimport { IPerson } from '../../../store/types/Person';\r\ninterface IndexProps {\r\n    rows:IPerson []\r\n}\r\n \r\nconst Index: React.FunctionComponent<IndexProps> =({rows}) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n                {columnsTD.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            { rows &&\r\n                rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((person:IPerson)=>{\r\n                    return <CustomTableRow key={person.id} person={person}/>\r\n                })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5,10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\nexport default Index;","import * as React from 'react';\r\nimport { useGetListPeopleQuery, useDeletePeopleMutation } from '../../store/services/Person'\r\nimport { Gender, IPerson } from '../../store/types/Person';\r\nimport MainCard from '../../components/cards/MainCard'\r\nimport CardButton from '../../components/cards/CardButton';\r\nimport Table from './Table'\r\ninterface ListPeopleProps {\r\n\r\n}\r\n\r\nconst ListPeople: React.FunctionComponent<ListPeopleProps> = () => {\r\n    const { data: people, error, isLoading } = useGetListPeopleQuery();\r\n    return (\r\n        <MainCard title=\"Personas\" secondary={<CardButton type=\"plus\" title=\"Create Persona\" link=\"/person/create\" />} >\r\n            <Table rows={people!=undefined?people as IPerson[]:[]}/>\r\n        </MainCard>\r\n        );\r\n}\r\n\r\nexport default ListPeople;\r\n"],"names":["types","sx","width","height","title","link","type","navigate","useNavigate","placement","size","edge","onClick","ml","bgcolor","headerSX","mr","children","secondary","theme","useTheme","borderColor","palette","primary","boxShadow","variant","action","CalculateAge","birthday","today","Date","age","getFullYear","m","getMonth","getDate","columnsTD","id","label","minWidth","align","person","useDeletePeopleMutation","deletePerson","isLoading","TableRow","TableCell","style","firstName","secondName","lastName","birthDate","gender","IconButton","Edit","window","confirm","then","response","toast","Delete","rows","React","page","setPage","rowsPerPage","setRowsPerPage","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","map","column","TableBody","slice","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","value","useGetListPeopleQuery","people","data","error","MainCard","CardButton","undefined"],"sourceRoot":""}