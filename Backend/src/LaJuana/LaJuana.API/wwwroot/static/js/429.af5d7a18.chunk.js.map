{"version":3,"file":"static/js/429.af5d7a18.chunk.js","mappings":"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","sources":["components/cards/CardButton.tsx","components/cards/MainCard.tsx","store/types/Person.tsx","views/Person/Forms/Email.tsx","views/Person/Forms/Phones.tsx","views/Person/Forms/GeoCode.tsx","views/Person/Forms/Addresses.tsx","views/Person/Create.tsx","views/Person/Forms/PersonalData.tsx"],"sourcesContent":["\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, IconButton, Link, Tooltip } from '@mui/material';\r\nimport PlusOneIcon from '@mui/icons-material/AddOutlined';\r\nimport ArrowBack from '@mui/icons-material/ArrowBack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// project imports\r\n\r\n\r\ninterface ICardButton {\r\n    title:string\r\n    link: string\r\n    type: \"plus\" | \"back\"\r\n}\r\nconst types={\r\n    \"plus\":<PlusOneIcon  sx={{ width: 32, height: 32 }}/>,\r\n    \"back\":<ArrowBack  sx={{ width: 32, height: 32 }}/>,\r\n}\r\n\r\nconst CardButton: React.FunctionComponent<ICardButton> = ({ title, link, type}) => {\r\n    const navigate = useNavigate();\r\n    const redirectTo= (to:string)=>{\r\n        navigate(to);\r\n    }\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <IconButton\r\n                size=\"small\"\r\n                edge=\"end\"\r\n                onClick={()=>redirectTo(link)}\r\n                sx={{ ml: 2, bgcolor: 'primary.main' }}\r\n            >\r\n             {types[type]}   \r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default CardButton;\r\n","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography,Color } from '@mui/material';\r\n\r\n\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n\r\ninterface IContent{\r\n    children : any\r\n    secondary: any\r\n    title: any\r\n}\r\n \r\nconst MainCard: React.FunctionComponent<IContent> = ({\r\n    children,\r\n    secondary,\r\n    title,\r\n}) => {\r\n    const theme = useTheme();\r\n    return ( <Card   \r\n        sx={{\r\n            borderColor: ((theme.palette.primary as unknown) as Color)[500],\r\n            ':hover': {\r\n                boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n            },\r\n        }}\r\n    >\r\n        {title && (\r\n            <CardHeader sx={headerSX} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\r\n        )}\r\n        {title && <Divider />}\r\n            <CardContent >\r\n                {children}\r\n            </CardContent>\r\n        \r\n    </Card> );\r\n}\r\n \r\nexport default MainCard;\r\n","export enum Gender {\r\n    Femenino = \"Femenino\",\r\n    Masculino = \"Masculino\",\r\n    Personalizado = \"Personalizado\"\r\n  }\r\nexport interface IAddress{\r\n  street:string\r\n  city: number\r\n  state: number\r\n  country: number\r\n  zipCode: string\r\n  latitude: number\r\n  longitude: number\r\n  description: string\r\n}\r\n\r\nexport interface IMail{\r\n  email:string\r\n  emailDescription: string\r\n}\r\nexport interface IPhone{\r\n  phoneNumber:string\r\n  phoneDescription:string\r\n}\r\nexport interface IPerson {\r\n    id: string\r\n    firstName: string|undefined\r\n    secondName: string|undefined\r\n    lastName: string|undefined\r\n    birthDate: string\r\n    gender: Gender\r\n    pronounPreference?: string\r\n    nationalId?:string\r\n    addresses: IAddress[]\r\n    mails: IMail[]\r\n    phones:IPhone[]\r\n}","import { Avatar, Box, Card, CardContent, CardHeader, IconButton, TextField, Button } from '@mui/material';\r\nimport * as React from 'react';\r\nimport Personalizado from '../../../assets/person/Personalizado.png'\r\nimport { IPerson, IMail } from '../../../store/types/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n\r\ninterface EmailProps {\r\n    person: IPerson | Partial<IPerson>\r\n    setPerson: (value: React.SetStateAction<IPerson | Partial<IPerson>>) => void\r\n}\r\n\r\nconst Email: React.FunctionComponent<EmailProps> = ({ person, setPerson }) => {\r\n    const [emails, setEmails] = React.useState<IMail[]>(person.mails as IMail[])\r\n    const addEmail=()=>{\r\n        const em: IMail = { emailDescription: \"Email Personal\", email: \"@gmail.com\" };\r\n        setEmails(emails.concat(em));\r\n    }\r\n    const deleteEmail = (index:number) =>{\r\n        let e1=[...emails];\r\n        e1.splice(index,1)\r\n        setEmails(e1);\r\n    }\r\n    const onChangeEmail=(index:number,email:IMail)=>{\r\n        let e1=[...emails];\r\n        e1.splice(index,1,email)\r\n        setEmails(e1)\r\n    }\r\n    React.useEffect(()=>{setPerson({ ...person, \"mails\": emails })},[emails])\r\n    return <Card sx={{ maxWidth: 345, minWidth: 345 }}>\r\n        <CardHeader\r\n            avatar={\r\n                <Avatar src={Personalizado} aria-label=\"recipe\">\r\n                    R\r\n                </Avatar>\r\n            }\r\n            title={\"Registar Emails\"}\r\n            action={\r\n                <Button onClick={addEmail} variant=\"contained\" aria-label=\"settings\">\r\n                    <AddIcon />\r\n                </Button>\r\n            }\r\n        />\r\n\r\n        <CardContent>\r\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                {\r\n                    emails.map((email,index) => {\r\n                        return <Box key={index}>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"emailDescription\"\r\n                                label=\"Description\"\r\n                                name=\"emailDescription\"\r\n                                value={email.emailDescription}\r\n                                onChange={({ target: { value } }) => {\r\n                                    email.emailDescription=value\r\n                                    onChangeEmail(index,email)\r\n                                 }}\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                value={email.email}\r\n                                onChange={({ target: { value } }) => {\r\n                                    email.email=value\r\n                                    onChangeEmail(index,email)\r\n                                 }}\r\n                            />\r\n                            <Button onClick={()=>{deleteEmail(index)}} variant=\"contained\">\r\n                                <RemoveIcon/>\r\n                            </Button>\r\n                            <hr />\r\n                        </Box>\r\n                    })\r\n                }\r\n            </Box>\r\n        </CardContent>\r\n\r\n    </Card>;\r\n}\r\n\r\nexport default Email;","import { Avatar, Box, Card, CardContent, CardHeader, IconButton, TextField, Button } from '@mui/material';\r\nimport * as React from 'react';\r\nimport Personalizado from '../../../assets/person/Personalizado.png'\r\nimport { IPerson, IPhone } from '../../../store/types/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\n\r\ninterface PhonesProps {\r\n    person: IPerson | Partial<IPerson>\r\n    setPerson: (value: React.SetStateAction<IPerson | Partial<IPerson>>) => void\r\n}\r\n\r\nconst Phones: React.FunctionComponent<PhonesProps> = ({ person, setPerson }) => {\r\n    const [phones, setPhones] = React.useState<IPhone[]>(person.phones as IPhone[])\r\n    const addPhones=()=>{\r\n        const em: IPhone = { phoneDescription: \"Celular Personal\", phoneNumber: \"\" };\r\n        setPhones(phones.concat(em));\r\n    }\r\n    const deletePhones = (index:number) =>{\r\n        let e1=[...phones];\r\n        e1.splice(index,1)\r\n        setPhones(e1);\r\n    }\r\n    const onChangePhones=(index:number,phone:IPhone)=>{\r\n        let e1=[...phones];\r\n        e1.splice(index,1,phone)\r\n        setPhones(e1)\r\n    }\r\n    React.useEffect(()=>{setPerson({ ...person, \"phones\": phones })},[phones])\r\n    return <Card sx={{ maxWidth: 345,minWidth: 345 }}>\r\n        <CardHeader\r\n            avatar={\r\n                <Avatar src={Personalizado} aria-label=\"recipe\">\r\n                    R\r\n                </Avatar>\r\n            }\r\n            title={\"Registar Telefonos\"}\r\n            action={\r\n                <Button onClick={addPhones} variant=\"contained\" aria-label=\"settings\">\r\n                    <AddIcon />\r\n                </Button>\r\n            }\r\n        />\r\n\r\n        <CardContent>\r\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                {\r\n                    phones.map((phone,index) => {\r\n                        return <Box key={index}>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"phoneDescription\"\r\n                                label=\"Description\"\r\n                                name=\"phoneDescription\"\r\n                                value={phone.phoneDescription}\r\n                                onChange={({ target: { value } }) => {\r\n                                    phone.phoneDescription=value\r\n                                    onChangePhones(index,phone)\r\n                                 }}\r\n                                autoFocus\r\n                            />\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"phone\"\r\n                                label=\"Phones\"\r\n                                type=\"phone\"\r\n                                id=\"phone\"\r\n                                value={phone.phoneNumber}\r\n                                onChange={({ target: { value } }) => {\r\n                                    phone.phoneNumber=value\r\n                                    onChangePhones(index,phone)\r\n                                 }}\r\n                            />\r\n                            <Button onClick={()=>{deletePhones(index)}} variant=\"contained\">\r\n                                <RemoveIcon/>\r\n                            </Button>\r\n                            <hr />\r\n                        </Box>\r\n                    })\r\n                }\r\n            </Box>\r\n        </CardContent>\r\n\r\n    </Card>;\r\n}\r\n\r\nexport default Phones;","import * as React from 'react';\r\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport { IAddress } from '../../../store/types/Person';\r\nconst GOOGLE_GEOCODE_API_KEY=\"\";\r\nGeocode.setApiKey(GOOGLE_GEOCODE_API_KEY);\r\nGeocode.enableDebug();\r\nconst containerStyle = {\r\n    width: \"325px\",\r\n    height: \"325px\"\r\n};\r\n\r\nconst center = {\r\n    lat: -17.7843319,\r\n    lng: -63.1867945\r\n};\r\n\r\n\r\ninterface GeoCodeProps {\r\n    sendLocation: (info: IAddress) => void\r\n}\r\n\r\nconst GeoCode: React.FunctionComponent<GeoCodeProps> = ({ sendLocation }) => {\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: \"google-map-script\",\r\n        googleMapsApiKey: \"\",\r\n    });\r\n    const [geocoder, setGeocoder] = React.useState(undefined);\r\n    const [map, setMap] = React.useState(null);\r\n\r\n\r\n    const onLoad = React.useCallback(function callback(map: any) {\r\n        setMap(map);\r\n    }, []);\r\n\r\n    const onUnmount = React.useCallback(function callback(map: any) {\r\n        setMap(null);\r\n    }, []);\r\n\r\n    const [marker, setMarker] = React.useState(center);\r\n\r\n    const onLoadMarker = React.useCallback(function callback(marker: any) {\r\n        // setMarker(marker)\r\n    }, []);\r\n    const onDblClickMap = (e: any) => {\r\n        setMarker({\r\n            lat: e.latLng.lat(),\r\n            lng: e.latLng.lng()\r\n        })\r\n        Geocode.fromLatLng(\r\n            e.latLng.lat(),\r\n            e.latLng.lng()\r\n        ).then(\r\n            response => {\r\n                const street = response.results[0].address_components[1].short_name;\r\n                const address:IAddress = {\r\n                    street: street,\r\n                    city: 0,\r\n                    state: 0,\r\n                    country: 0,\r\n                    zipCode: \"none\",\r\n                    latitude: response.results[0].geometry.location.lat,\r\n                    longitude: response.results[0].geometry.location.lng,\r\n                    description: response.results[0].formatted_address\r\n                }\r\n                sendLocation(address);\r\n\r\n\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n\r\n    }\r\n    return isLoaded ? (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={center}\r\n            zoom={12}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            onClick={onDblClickMap}\r\n        >\r\n\r\n            <Marker onLoad={onLoad}\r\n                position={{\r\n                    lat: marker.lat,\r\n                    lng: marker.lng\r\n                }} />\r\n\r\n        </GoogleMap>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nexport default React.memo(GeoCode);\r\n","import { Avatar, Box, Button, Card, CardContent, CardHeader, Grid, IconButton, TextField, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\nimport Personalizado from '../../../assets/person/Personalizado.png'\r\nimport GeoCode from './GeoCode'\r\nimport { IPerson, IAddress } from '../../../store/types/Person';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\ninterface AddressesProps {\r\n    person: IPerson | Partial<IPerson>\r\n    setPerson: (value: React.SetStateAction<IPerson | Partial<IPerson>>) => void\r\n}\r\n\r\nconst Addresses: React.FunctionComponent<AddressesProps> = ({ person, setPerson }) => {\r\n    const [addressArray, setAddressArray] = React.useState<IAddress[]>(person.addresses as IAddress[])\r\n    const [address, setAddress] = React.useState<IAddress>({\r\n        street: \"\",\r\n        city: 0,\r\n        state: 0,\r\n        country: 0,\r\n        zipCode: \"none\",\r\n        latitude: 0,\r\n        longitude: 0,\r\n        description: \"\"\r\n    })\r\n    const reciveLocation = (data: IAddress) => {\r\n        setAddress(data)\r\n    }\r\n    const addAddress = () => {\r\n        setAddressArray([...addressArray].concat(address))\r\n        setAddress({\r\n            street: \"\",\r\n            city: 0,\r\n            state: 0,\r\n            country: 0,\r\n            zipCode: \"none\",\r\n            latitude: 0,\r\n            longitude: 0,\r\n            description: \"\"\r\n        });\r\n    }\r\n    const removeAddr=(index:number)=>{\r\n        let e1=[...addressArray];\r\n        e1.splice(index,1)\r\n        setAddressArray(e1);\r\n    }\r\n    React.useEffect(()=>{setPerson({ ...person, \"addresses\": addressArray })},[addressArray])\r\n    return (<Card sx={{ maxWidth: 345, minWidth: 345 }}>\r\n        <CardHeader\r\n            avatar={\r\n                <Avatar src={Personalizado} aria-label=\"recipe\">\r\n                    R\r\n                </Avatar>\r\n            }\r\n            title={\"Registar Direccion\"}\r\n        />\r\n\r\n        <CardContent>\r\n            <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} >\r\n                        {`Seleccione una ubicacion en el mapa`}\r\n                        <GeoCode sendLocation={reciveLocation}></GeoCode>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            {`lan:${address.latitude}`}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            {`lng:${address.longitude}`}\r\n                        </Typography>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"street\"\r\n                            label=\"Street\"\r\n                            name=\"street\"\r\n                            value={address.street}\r\n                            onChange={({ target: { value } }) => {\r\n                                setAddress({ ...address, street: value })\r\n                            }}\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"description\"\r\n                            label=\"Descrition\"\r\n                            type=\"description\"\r\n                            id=\"description\"\r\n                            value={address.description}\r\n                            onChange={({ target: { value } }) => {\r\n                                setAddress({ ...address, description: value })\r\n                            }}\r\n                        />\r\n                        <Button disabled={address.street === \"\"} onClick={addAddress} variant=\"contained\">\r\n                            <AddIcon />\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        {addressArray.map((addr,index)=>{\r\n                            return <div key={index}>\r\n                            <Box>\r\n                                {addr.street}\r\n                                <IconButton onClick={()=>{removeAddr(index)}} aria-label=\"delete\">\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </Box>\r\n                            <hr/>\r\n                            </div>\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </CardContent>\r\n\r\n    </Card>\r\n    );\r\n}\r\n\r\nexport default Addresses;","import { Box, Button, ButtonGroup } from '@mui/material';\r\nimport * as React from 'react';\r\nimport { useCreatePeopleMutation } from '../../store/services/Person'\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { IPerson, Gender, IMail, IPhone } from '../../store/types/Person'\r\nimport MainCard from '../../components/cards/MainCard';\r\nimport CardButton from '../../components/cards/CardButton';\r\nimport Masculino from '../../assets/person/Masculino.png'\r\nimport Femenino from '../../assets/person/Femenino.png'\r\nimport Personalizado from '../../assets/person/Personalizado.png'\r\nimport PersonalData from './Forms/PersonalData'\r\nimport Email from './Forms/Email'\r\nimport Phones from './Forms/Phones'\r\nimport Addresses from './Forms/Addresses'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport { FetchBaseQueryError } from '@reduxjs/toolkit/dist/query';\r\nimport { SerializedError } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\ninterface EditProps {\r\n}\r\n\r\nconst Edit = () => {\r\n    const navigate = useNavigate();\r\n    const [\r\n        createPerson,\r\n        { isLoading: isUpdating },\r\n    ] = useCreatePeopleMutation()\r\n    const [personToCreate, setPersonToCreate] = React.useState<IPerson | Partial<IPerson>>({\r\n        id: \"\",\r\n        firstName: \"\",\r\n        secondName: \"\",\r\n        lastName: \"\",\r\n        nationalId: \"\",\r\n        birthDate: \"2022-06-21T20:14:15.005Z\",\r\n        gender: Gender.Personalizado,\r\n        pronounPreference: \"Femenino\",\r\n        addresses: [],\r\n        mails: [],\r\n        phones: []\r\n    });\r\n\r\n    const saveChanges = () => {\r\n        if(personToCreate.addresses?.length==0){\r\n            toast.error(\"agregue al menos una direccion\");\r\n            return \r\n        }\r\n        createPerson(personToCreate as IPerson).then((response: { data: IPerson; } | { error: FetchBaseQueryError | SerializedError; })=>{\r\n            if(\"data\" in response){\r\n                const fullname=`${personToCreate.firstName} ${personToCreate.secondName} ${personToCreate.lastName}`\r\n                toast.success(`Persona: ${fullname} ha sido creado existosamente`);\r\n                navigate(`/person`)\r\n            }\r\n            if(\"error\" in response){\r\n                toast.error(\"Error al momento de crear la persona\");\r\n            }\r\n        });\r\n        \r\n    }\r\n    const onCancelChanges = () => {\r\n        navigate(`/person`)\r\n    }\r\n    const [viewId, setViewId] = React.useState(0)\r\n    const view = [\r\n        {\r\n            id: 0,\r\n            view: <PersonalData person={personToCreate} setPerson={setPersonToCreate} />\r\n        },\r\n        {\r\n            id: 1,\r\n            view: <Email person={personToCreate} setPerson={setPersonToCreate} />\r\n        },\r\n        {\r\n            id: 2,\r\n            view: <Phones person={personToCreate} setPerson={setPersonToCreate} />\r\n        },\r\n        {\r\n            id: 3,\r\n            view: <Addresses person={personToCreate} setPerson={setPersonToCreate} />\r\n        }\r\n    ]\r\n    return (\r\n        <MainCard\r\n            title=\"Registrar Persona\"\r\n            secondary={\r\n                <CardButton type=\"back\" title=\"Lista de Personas\" link=\"/person\" />\r\n            } >\r\n            <Box\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Box display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    flexDirection={\"column\"}\r\n                >\r\n                    {\r\n                        view[viewId].view\r\n                    }\r\n                    <br />\r\n                    <ButtonGroup variant=\"contained\">\r\n                        <Button\r\n                            disabled={viewId - 1 < 0}\r\n                            onClick={() => { setViewId(viewId - 1) }}\r\n                            endIcon={<ArrowBackIcon />}> Atras</Button>\r\n                        \r\n                        {\r\n                            viewId === 3 ? <Button\r\n                                onClick={saveChanges}\r\n                                startIcon={<SaveIcon />}>Guardar todos los cambios</Button>\r\n                                :\r\n                                <Button\r\n                                    onClick={() => { setViewId(viewId + 1) }}\r\n                                    startIcon={<ArrowForwardIcon />}>Adelante</Button>\r\n                        }\r\n                    </ButtonGroup>\r\n                </Box>\r\n            </Box>\r\n        </MainCard>);\r\n}\r\n\r\nexport default Edit;","import * as React from 'react';\r\nimport { Gender, IPerson } from '../../../store/types/Person';\r\nimport Personalizado from '../../../assets/person/Personalizado.png'\r\nimport { Avatar, Box, Card, CardContent, CardHeader, TextField } from '@mui/material';\r\ninterface PersonalDataProps {\r\n    person:IPerson | Partial<IPerson>\r\n    setPerson: (value: React.SetStateAction<IPerson | Partial<IPerson>>) => void\r\n}\r\nexport const getFecha = (date: string) => {\r\n    const today:Date=new Date(date);\r\n    today.setDate(today.getDate() +1);\r\n    var mm = today.getMonth() + 1; \r\n    var dd = today.getDate();\r\n\r\n  return [today.getFullYear(),\r\n          (mm>9 ? '' : '0') + mm,\r\n          (dd>9 ? '' : '0') + dd\r\n         ].join('-');\r\n}\r\nconst PersonalData: React.FunctionComponent<PersonalDataProps> = ({person,setPerson}) => {\r\n    return <Card sx={{ maxWidth: 345 }}>\r\n    <CardHeader\r\n        avatar={\r\n            <Avatar src={Personalizado}  aria-label=\"recipe\">\r\n                R\r\n            </Avatar>\r\n        }\r\n        title={\"Registar Datos Pesonales\"}\r\n    />\r\n    <CardContent>\r\n        <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                value={person!.firstName}\r\n                onChange={({ target: { value } }) => setPerson({ ...person, \"firstName\": value })}\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"secondName\"\r\n                label=\"Second Name\"\r\n                type=\"secondName\"\r\n                id=\"secondName\"\r\n                value={person!.secondName}\r\n                onChange={({ target: { value } }) => setPerson({ ...person, \"secondName\": value })}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                value={person!.lastName}\r\n                onChange={({ target: { value } }) => setPerson({ ...person, \"lastName\": value })}\r\n            />\r\n            \r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"birthDate\"\r\n                label=\"BirthDate\"\r\n                name=\"birthDate\"\r\n                type=\"date\"\r\n                value={person!.birthDate?.split(\"T\")[0]}\r\n                onChange={({ target: { value } }) => setPerson({ ...person, \"birthDate\": value })}\r\n            />\r\n            <TextField\r\n                id=\"outlined-select-currency-native\"\r\n                select\r\n                label=\"Gender\"\r\n                sx={{width:\"100%\",mt: 1}}\r\n                value={person.gender}\r\n                onChange={({ target: { value } }) => setPerson({ ...person, \"pronounPreference\": value, \"gender\": value as Gender })}\r\n                SelectProps={{\r\n                    native: true,\r\n                }}\r\n            >\r\n                \r\n                <option key={Gender.Personalizado} value={Gender.Personalizado}>\r\n                    {Gender.Personalizado}\r\n                </option>\r\n                <option key={Gender.Masculino} value={Gender.Masculino}>\r\n                    {Gender.Masculino}\r\n                </option>\r\n                <option key={Gender.Femenino} value={Gender.Femenino}>\r\n                    {Gender.Femenino}\r\n                </option>\r\n            </TextField>\r\n        </Box>\r\n    </CardContent>\r\n    \r\n</Card>;\r\n}\r\n \r\nexport default PersonalData;"],"names":["types","sx","width","height","title","link","type","navigate","useNavigate","placement","size","edge","onClick","ml","bgcolor","headerSX","mr","children","secondary","theme","useTheme","borderColor","palette","primary","boxShadow","variant","action","Gender","person","setPerson","React","mails","emails","setEmails","onChangeEmail","index","email","e1","splice","Card","maxWidth","minWidth","CardHeader","avatar","Avatar","src","Personalizado","Button","concat","emailDescription","Add","CardContent","Box","component","noValidate","mt","map","TextField","margin","required","fullWidth","id","label","name","value","onChange","target","autoFocus","deleteEmail","Remove","phones","setPhones","onChangePhones","phone","phoneDescription","phoneNumber","deletePhones","Geocode","containerStyle","center","lat","lng","GeoCode","sendLocation","isLoaded","useJsApiLoader","googleMapsApiKey","undefined","setMap","onLoad","onUnmount","marker","setMarker","mapContainerStyle","zoom","e","latLng","then","response","address","street","results","address_components","short_name","city","state","country","zipCode","latitude","geometry","location","longitude","description","formatted_address","error","console","position","addresses","addressArray","setAddressArray","setAddress","Grid","container","spacing","item","xs","data","Typography","disabled","addr","IconButton","removeAddr","Delete","useCreatePeopleMutation","createPerson","isLoading","firstName","secondName","lastName","nationalId","birthDate","gender","pronounPreference","personToCreate","setPersonToCreate","viewId","setViewId","view","PersonalData","MainCard","CardButton","display","justifyContent","alignItems","flexDirection","ButtonGroup","endIcon","ArrowBack","length","fullname","toast","startIcon","Save","ArrowForward","split","select","SelectProps","native"],"sourceRoot":""}